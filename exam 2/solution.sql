-- Task 1: Bot vs. Human Changes
SELECT
	SUM((CASE WHEN (WIKIMEDIA_RECENTCHANGES.BOT = true) THEN 1 ELSE 0 END)) BOT_CHANGES,
	SUM((CASE WHEN (WIKIMEDIA_RECENTCHANGES.BOT = false) THEN 1 ELSE 0 END)) NONBOT_OR_HUMAN_CHANGES,
	COUNT (*) AS TOTAL_COUNT
	FROM  WIKIMEDIA_RECENTCHANGES
	GROUP BY 1
	EMIT CHANGES;
	
-- Task 2: Bot vs. Human Changes (with 2 minute window)
CREATE TABLE COUNT_TUMBLING_WINDOW WITH (KAFKA_TOPIC='COUNT_TUMBLING_WINDOW', PARTITIONS=1, REPLICAS=1) AS SELECT
	SUM((CASE WHEN (WIKIMEDIA_RECENTCHANGES.BOT = true) THEN 1 ELSE 0 END)) BOT_COUNT,
	SUM((CASE WHEN (WIKIMEDIA_RECENTCHANGES.BOT = false) THEN 1 ELSE 0 END)) HUMAN_COUNT,
	COUNT (*) AS TOTAL_COUNT,
    TIMESTAMPTOSTRING(WIKIMEDIA_RECENTCHANGES.WINDOWSTART, 'yyyy-MM-dd HH:mm:ss', 'UTC') AS WINDOW_START,
    TIMESTAMPTOSTRING(WIKIMEDIA_RECENTCHANGES.WINDOWSTOP, 'yyyy-MM-dd HH:mm:ss', 'UTC') AS WINDOW_STOP
	FROM  WIKIMEDIA_RECENTCHANGES
	WINDOW TUMBLING (SIZE 60 SECONDS)
	GROUP BY TYPE
	EMIT CHANGES;
-- Task 2: Result
SELECT WINDOW_START, WINDOW_STOP, BOT_COUNT FROM COUNT_TUMBLING_WINDOW EMIT CHANGES;

-- Task 3: The Type field indicates the type of the change. What is the distribution of Type over Windows of say 60 seconds?
SELECT 
	SUM((CASE WHEN (WIKIMEDIA_RECENTCHANGES.TYPE = 'categorieze') THEN 1 ELSE 0 END)) CATEGORIZE,
	SUM((CASE WHEN (WIKIMEDIA_RECENTCHANGES.TYPE = 'edit') THEN 1 ELSE 0 END)) EDIT,
	SUM((CASE WHEN (WIKIMEDIA_RECENTCHANGES.TYPE = 'log') THEN 1 ELSE 0 END)) LOG,
	SUM((CASE WHEN (WIKIMEDIA_RECENTCHANGES.TYPE = 'new') THEN 1 ELSE 0 END)) NEW,
	COUNT (*) AS TOTAL_COUNT,
    TIMESTAMPTOSTRING(WIKIMEDIA_RECENTCHANGES.WINDOWSTART, 'yyyy-MM-dd HH:mm:ss', 'UTC') AS WINDOW_START,
    TIMESTAMPTOSTRING(WIKIMEDIA_RECENTCHANGES.WINDOWEND, 'yyyy-MM-dd HH:mm:ss', 'UTC') AS WINDOW_STOP
	FROM  WIKIMEDIA_RECENTCHANGES
	WINDOW TUMBLING (SIZE 60 SECONDS)
	GROUP BY 1
	EMIT CHANGES;

